@use 'sass:color';

/*
 * Theme definitions
 */
@function make-bg-gradient($base) {
    @return linear-gradient(
        to bottom,
        color.mix($base, hsl(188, 90%, 80%), 90%),
        66%,
        color.mix($base, hsl(188, 90%, 40%), 60%),
    );
}

@mixin theme-definer(
    $color-fg,
    $color-bg,
    $color-bg-alt,
    $color-links,
) {
    --bg: #{make-bg-gradient($color-bg) fixed};
    --bg-alt: #{make-bg-gradient($color-bg-alt) fixed};

    --color-bg: #{$color-bg};
    --color-bg-alt: #{$color-bg-alt};
    --color-fg: #{$color-fg};
    --color-fg-deemph: #{color.mix($color-fg, $color-bg)};
    --color-accent: #ca3131;
    --color-links: #{$color-links};
    --color-shadow: #00000088;
}

$bg-light: #f5f8fa;
$bg-dark: #30383c;

@mixin theme-light-def {
    @include theme-definer(#333333, $bg-light, #e2e8eb, #0000ff);
}

@mixin theme-dark-def {
    @include theme-definer(#dddddd, $bg-dark, #4c555a, #0000ff);
}

/*
 * Variables for theme selection
 */
body {
    --theme-light-color-bg: #{$bg-light};
    --theme-dark-color-bg: #{$bg-dark};
}

/*
 * Select theme
 */

// Default
@media not (prefers-color-scheme: dark) {
    body:not(.theme-light):not(.theme-dark) {
        @include theme-light-def;
    }
}

// Use dark theme if preferred
@media (prefers-color-scheme: dark) {
    body:not(.theme-light):not(.theme-dark) {
        @include theme-dark-def;
    }
}

// Forced themes
body.theme-light {
    @include theme-light-def;
}
body.theme-dark {
    @include theme-dark-def;
}

/*
 * Apply theme
 */
body {
    color: var(--color-fg);
}
